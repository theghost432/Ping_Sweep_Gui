import tkinter as tk
from tkinter import scrolledtext, messagebox
import threading
import subprocess
import platform
import ipaddress

def ping_host(ip, output_box):
    param = "-n" if platform.system().lower() == "windows" else "-c"
    try:
        result = subprocess.run(["ping", param, "1", str(ip)],
                                stdout=subprocess.DEVNULL)
        status = "UP" if result.returncode == 0 else "DOWN"
    except Exception as e:
        status = f"ERROR: {e}"

    output_box.insert(tk.END, f"{ip} is {status}\n")
    output_box.see(tk.END)

def start_ping_sweep(start_ip, end_ip, output_box):
    try:
        ip_range = list(ipaddress.summarize_address_range(
            ipaddress.IPv4Address(start_ip),
            ipaddress.IPv4Address(end_ip)
        ))[0]
        all_ips = list(ip_range.hosts())
    except Exception as e:
        messagebox.showerror("Invalid IP Range", str(e))
        return

    output_box.delete(1.0, tk.END)
    threads = []
    for ip in all_ips:
        thread = threading.Thread(target=ping_host, args=(ip, output_box))
        thread.start()
        threads.append(thread)

def on_start_click(start_entry, end_entry, output_box):
    start_ip = start_entry.get()
    end_ip = end_entry.get()
    threading.Thread(target=start_ping_sweep, args=(start_ip, end_ip, output_box)).start()

def create_gui():
    root = tk.Tk()
    root.title("Ping Sweep Tool")
    root.geometry("600x400")

    tk.Label(root, text="Start IP:").pack()
    start_entry = tk.Entry(root, width=20)
    start_entry.pack()

    tk.Label(root, text="End IP:").pack()
    end_entry = tk.Entry(root, width=20)
    end_entry.pack()

    start_button = tk.Button(root, text="Start Ping Sweep", command=lambda: on_start_click(start_entry, end_entry, output_box))
    start_button.pack(pady=10)

    output_box = scrolledtext.ScrolledText(root, width=70, height=15)
    output_box.pack(padx=10, pady=10)

    root.mainloop()

if __name__ == "__main__":
    create_gui()